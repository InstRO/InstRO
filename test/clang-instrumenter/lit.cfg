import os
import lit.util
import lit.formats

# From libcxx lit: Tell pylint that we know config and lit_config exist somewhere.
if 'PYLINT_IMPORT' in os.environ:
    config = object()
    lit_config = object()

config.name = "ClangInstrumenterTest"

loaded_site_cfg = getattr(config, 'loaded_site_config', False)
if not loaded_site_cfg:
  # Check for 'typeartpass_site_config' user parameter, and use that if available.
  site_cfg = lit_config.params.get('instro_site_config', None)
  if site_cfg and os.path.exists(site_cfg):
    lit_config.load_config(config, site_cfg)
    raise SystemExit

config.test_format = lit.formats.ShTest(execute_external=True)
config.suffixes = ['.c','.cpp']
config.excludes = ['Instrumented']


instro_lib_dir    = getattr(config, 'instro_lib_dir', None)
instro_bin_dir    = getattr(config, 'instro_bin_dir', None)

instrumenter_script = '{}/{}'.format(instro_bin_dir, 'test/clang-instrumenter/instrument.sh')

config.substitutions.append(('%instrument', instrumenter_script))
